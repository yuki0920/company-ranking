/* tslint:disable */
/* eslint-disable */
/**
 * Company Search API Document
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Meta } from './Meta';
import {
    MetaFromJSON,
    MetaFromJSONTyped,
    MetaToJSON,
} from './Meta';
import type { EachCompany } from './EachCompany';
import {
    EachCompanyFromJSON,
    EachCompanyFromJSONTyped,
    EachCompanyToJSON,
} from './EachCompany';

/**
 * 
 * @export
 * @interface ResponseCompanies
 */
export interface ResponseCompanies {
    /**
     * 
     * @type {Meta}
     * @memberof ResponseCompanies
     */
    meta: Meta;
    /**
     * 
     * @type {Array<EachCompany>}
     * @memberof ResponseCompanies
     */
    companies: Array<EachCompany>;
}

/**
 * Check if a given object implements the ResponseCompanies interface.
 */
export function instanceOfResponseCompanies(value: object): value is ResponseCompanies {
    if (!('meta' in value) || value['meta'] === undefined) return false;
    if (!('companies' in value) || value['companies'] === undefined) return false;
    return true;
}

export function ResponseCompaniesFromJSON(json: any): ResponseCompanies {
    return ResponseCompaniesFromJSONTyped(json, false);
}

export function ResponseCompaniesFromJSONTyped(json: any, ignoreDiscriminator: boolean): ResponseCompanies {
    if (json == null) {
        return json;
    }
    return {
        
        'meta': MetaFromJSON(json['meta']),
        'companies': ((json['companies'] as Array<any>).map(EachCompanyFromJSON)),
    };
}

export function ResponseCompaniesToJSON(value?: ResponseCompanies | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'meta': MetaToJSON(value['meta']),
        'companies': ((value['companies'] as Array<any>).map(EachCompanyToJSON)),
    };
}

